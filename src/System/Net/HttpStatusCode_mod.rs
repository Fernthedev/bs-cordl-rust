#[cfg(feature = "System+Net+HttpStatusCode")]
#[repr(i32)]
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
pub enum HttpStatusCode {
    Accepted = 202i32,
    AlreadyReported = 208i32,
    Ambiguous = 300i32,
    BadGateway = 502i32,
    BadRequest = 400i32,
    Conflict = 409i32,
    Continue = 100i32,
    Created = 201i32,
    EarlyHints = 103i32,
    ExpectationFailed = 417i32,
    FailedDependency = 424i32,
    Forbidden = 403i32,
    Found = 302i32,
    GatewayTimeout = 504i32,
    Gone = 410i32,
    HttpVersionNotSupported = 505i32,
    IMUsed = 226i32,
    InsufficientStorage = 507i32,
    InternalServerError = 500i32,
    LengthRequired = 411i32,
    Locked = 423i32,
    LoopDetected = 508i32,
    MethodNotAllowed = 405i32,
    MisdirectedRequest = 421i32,
    Moved = 301i32,
    MultiStatus = 207i32,
    NetworkAuthenticationRequired = 511i32,
    NoContent = 204i32,
    NonAuthoritativeInformation = 203i32,
    NotAcceptable = 406i32,
    NotExtended = 510i32,
    NotFound = 404i32,
    NotImplemented = 501i32,
    NotModified = 304i32,
    OK = 200i32,
    PartialContent = 206i32,
    PaymentRequired = 402i32,
    PermanentRedirect = 308i32,
    PreconditionFailed = 412i32,
    PreconditionRequired = 428i32,
    Processing = 102i32,
    ProxyAuthenticationRequired = 407i32,
    RedirectKeepVerb = 307i32,
    RedirectMethod = 303i32,
    RequestEntityTooLarge = 413i32,
    RequestHeaderFieldsTooLarge = 431i32,
    RequestTimeout = 408i32,
    RequestUriTooLong = 414i32,
    RequestedRangeNotSatisfiable = 416i32,
    ResetContent = 205i32,
    ServiceUnavailable = 503i32,
    SwitchingProtocols = 101i32,
    TooManyRequests = 429i32,
    Unauthorized = 401i32,
    UnavailableForLegalReasons = 451i32,
    UnprocessableEntity = 422i32,
    UnsupportedMediaType = 415i32,
    Unused = 306i32,
    UpgradeRequired = 426i32,
    UseProxy = 305i32,
    VariantAlsoNegotiates = 506i32,
}
#[cfg(feature = "System+Net+HttpStatusCode")]
quest_hook::libil2cpp::unsafe_impl_value_type!(
    in quest_hook::libil2cpp for crate ::System::Net::HttpStatusCode => "System.Net"
    ."HttpStatusCode"
);
